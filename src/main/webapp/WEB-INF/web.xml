<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" version="3.1">
  <display-name>financeiro</display-name>
  
  <context-param> <!-- A tag com o nome PROJECT_STAGE serve para definir em qual fase de desenvolvimento encontra-se o projeto -->
    <param-name>javax.faces.PROJECT_STAGE</param-name>
    <param-value>Development</param-value>
  </context-param>
  
  <context-param> <!-- A tag com o nome INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL serve para definir que os campos de formulário que forem submetidos em branco sejam recebidos como null e não como "" vazio -->
    <param-name>javax.faces.INTERPRET_EMPTY_STRING_SUBMITTED_VALUES_AS_NULL</param-name>
    <param-value>true</param-value>
  </context-param>
  
  <context-param> <!-- A tag com o nome DATETIMECONVERTER_DEFAULT_TIMEZONE_IS_SYSTEM_TIMEZONE serve para definir que os campos de data e hora utilizarão os fuso horário definido no sistema -->
    <param-name>javax.faces.DATETIMECONVERTER_DEFAULT_TIMEZONE_IS_SYSTEM_TIMEZONE</param-name>
    <param-value>true</param-value>
  </context-param>
  
  <welcome-file-list> <!-- A tag <welcome-file-list> define quais arquivos serão exibidos (em ordem de prioridade) caso o edereço requisitado não especifique um arquivo diretamente -->
    <welcome-file>index.jsf</welcome-file>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
  </welcome-file-list>
  
  <servlet> <!-- As tags <servlet> e <servlet-mapping> são as que dizem ao Apache Tomcat que o Java Server Faces está instalado e vai responder pelas requisições *.jsf -->
    <servlet-name>Faces Servlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  
  <servlet-mapping> <!-- As tags <servlet> e <servlet-mapping> são as que dizem ao Apache Tomcat que o Java Server Faces está instalado e vai responder pelas requisições *.jsf -->
    <servlet-name>Faces Servlet</servlet-name>
    <url-pattern>*.jsf</url-pattern>
  </servlet-mapping>
  
  <!-- Configuração do Spring Security -->
  <context-param> <!-- A tag com o nome contextConfigLocation serve para informar quais são os arquivos de configuração disponíveis -->
	<param-name>contextConfigLocation</param-name>
	<param-value>
	/WEB-INF/applicationContext.xml
	/WEB-INF/applicationContext-security.xml
	</param-value>
  </context-param>
  
  <filter> <!-- As tags <filter> e <filter-mapping> servem servem para permitir que o Spring Security intercepte todas as resuisições realizadas -->
	<filter-name>springSecurityFilterChain</filter-name>
	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  
  <filter-mapping> <!-- As tags <filter> e <filter-mapping> servem servem para permitir que o Spring Security intercepte todas as resuisições realizadas -->
	<filter-name>springSecurityFilterChain</filter-name>
	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <listener> <!-- A tag <listener> serve para permitir que o Spring Security carregue os arquivos de configuração no momento em que o aplicativo web estiver sendo colocado no ar junto com o servidor -->
	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <resource-ref> <!-- A tag <resource-ref> com a descrição "DataSource FinanceiroDB" avisa ao Tomcat que o DataSource JNDI criado deve estar disponível para o aplicativo em questão -->
	<description>DataSource FinanceiroDB</description>
	<res-ref-name>jdbc/FinanceiropapwDB</res-ref-name>
	<res-type>javax.sql.DataSource</res-type>
	<res-auth>Container</res-auth>
  </resource-ref>  
</web-app>